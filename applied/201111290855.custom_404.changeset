Changeset created on Tue Nov 29 08:55:26 UTC 2011 by Seecr (Seek You Too B.V.)

Description: Redirect to a page when the requested page is not found

    A page can be specified to which the user will be redirected when the page requested does not exist (404)

Baseline version: svn+ssh://svn@svn.cq2.org/svn/dynamichtml/workingsets/0.7.3-Seecrweb/version_0

diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/deps.txt version_1/deps.txt
--- version_0/deps.txt	2011-11-29 09:29:22.000000000 +0100
+++ version_1/deps.txt	2011-11-29 09:55:21.000000000 +0100
@@ -1,3 +1,4 @@
 python-lxml
+python-amara
 python-meresco-core (>= 3.1.7)
 python-meresco-core (<< 3.2)
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/dynamichtml/dynamichtml.py version_1/dynamichtml/dynamichtml.py
--- version_0/dynamichtml/dynamichtml.py	2011-11-29 09:29:22.000000000 +0100
+++ version_1/dynamichtml/dynamichtml.py	2011-11-29 09:55:21.000000000 +0100
@@ -50,16 +50,19 @@
 class DynamicHtmlException(Exception):
     pass
 
+def redirectTo(location):
+    return "HTTP/1.0 302 Found\r\nLocation: %s\r\n\r\n" % location
+
 class Http(object):
     def redirect(self, location):
-        return "HTTP/1.0 302 Found\r\nLocation: %(location)s\r\n\r\n" % locals()
+        return redirectTo(location)
 
 def escapeHtml(aString):
     return _escapeHtml(aString).replace('"','&quot;')
 
 class DynamicHtml(Observable):
 
-    def __init__(self, directories, reactor=None, prefix = '', allowedModules=None, indexPage='', verbose=False, additionalGlobals=None):
+    def __init__(self, directories, reactor=None, prefix='', allowedModules=None, indexPage='', verbose=False, additionalGlobals=None, notFoundPage=None):
         Observable.__init__(self)
         self._verbose = verbose
         if type(directories) != list:
@@ -67,6 +70,7 @@
         self._directories = directories
         self._prefix = prefix
         self._indexPage = indexPage
+        self._notFoundPage = notFoundPage
         self._allowedModules = allowedModules or []
         self._modules = {}
         self._initMonitoringForFileChanges(reactor)
@@ -155,7 +159,7 @@
             newLocation = self._indexPage
             if arguments:
                 newLocation = '%s?%s' % (newLocation, urlencode(arguments, doseq=True))
-            yield "HTTP/1.0 302 Found\r\nLocation: %s\r\n\r\n" % newLocation
+            yield redirectTo(newLocation)
             return
 
         try:
@@ -164,7 +168,11 @@
                 raise DynamicHtmlException('File "%s" does not exist.' % head)
             generators = compose(self._createMainGenerator(head, tail, Headers=Headers, arguments=arguments, path=path, scheme=scheme, netloc=netloc, query=query, **kwargs))
         except DynamicHtmlException, e:
-            yield 'HTTP/1.0 404 File not found\r\nContent-Type: text/html; charset=utf-8\r\n\r\n' + str(e)
+            response = 'HTTP/1.0 404 File not found\r\nContent-Type: text/html; charset=utf-8\r\n\r\n' + str(e)
+            if not self._notFoundPage is None:
+                response = redirectTo(self._notFoundPage)
+
+            yield response
             return
 
         while True:
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/dynamichtmltest.py version_1/test/dynamichtmltest.py
--- version_0/test/dynamichtmltest.py	2011-11-29 09:29:22.000000000 +0100
+++ version_1/test/dynamichtmltest.py	2011-11-29 09:55:21.000000000 +0100
@@ -40,6 +40,12 @@
         result = d.handleRequest('http', 'host.nl', '/a/path', '?query=something', '#fragments', {'query': 'something'})
         self.assertEquals('HTTP/1.0 404 File not found\r\nContent-Type: text/html; charset=utf-8\r\n\r\nFile "a" does not exist.', ''.join(result))
 
+    def testCustomFileNotFound(self):
+        d = DynamicHtml([self.tempdir], notFoundPage="/redirect_to_me", reactor=CallTrace('Reactor'))
+        result = d.handleRequest('http', 'host.nl', '/a/path', '?query=something', '#fragments', {'query': 'something'})
+        headers, message = ''.join(result).split('\r\n\r\n')
+        self.assertEquals('HTTP/1.0 302 Found\r\nLocation: /redirect_to_me', headers)
+
     def testASimpleFlatFile(self):
         open(self.tempdir+'/afile.sf', 'w').write('def main(*args, **kwargs): \n  yield "John is a nut"')
         d = DynamicHtml([self.tempdir], reactor=CallTrace('Reactor'))
@@ -81,7 +87,6 @@
         result = ''.join(compose(s.handleRequest('http', 'host.nl', '/other', '?query=something', '#fragments', {'query': 'something'})))
         self.assertEquals('HTTP/1.0 200 Ok\r\nContent-Type: text/html; charset=utf-8\r\n\r\nmeissnake', result)
 
-
     def testUseModuleLocals(self):
         open(self.tempdir+'/testSimple.sf', 'w').write("""
 moduleLocal = "local is available"
